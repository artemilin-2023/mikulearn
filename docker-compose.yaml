version: "3.8"

services:
  backend:
    build:
      context: src/backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d database"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./src/frontend/
      dockerfile: build/Dockerfile

  caddy:
    build:
      context: ./proxy/
      dockerfile: Dockerfile
    environment:
      CLOUDFLARE_API_TOKEN: <API_TOKEN_HERE>
    volumes:
      - ./conf:/etc/caddy
      - caddy-data:/data
    ports:
      - 80:80
      - 443:443

volumes:
  postgres-data:
  redis-data:
  caddy-data:
